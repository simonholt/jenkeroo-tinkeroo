<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>RESULTS_REGION</name>
          <description>Region in which staging tests are running</description>
          <defaultValue>eu-west-1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUCKET_NAME</name>
          <description>Name of the S3 bucket that contains the RESULTS_FILENAME</description>
          <defaultValue>wcc-dev-staging-data</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OUTPUT_FOLDER</name>
          <description>Please use this format {technical_owner}/{servicename}/{version}/{test-type}/</description>
          <defaultValue>e2e</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AWS_ACCOUNT_ID</name>
          <description>The AWS account the bucket belongs to</description>
          <defaultValue>992548356091</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2660.vb_c0412dc4e6d">
    <script>/*
The pipeline is used to pull test results from S3 buckets located in other AWS accounts.
It uses sts assume role using in the target account.
- RESULTS_REGION
- BUCKET_NAME
- SERVICE_TRIGGER
- BUILD_TIME
- AWS_ACCOUNT_ID

All of the above parameters need to be set in the Jenkins UI or from by the caller
*/

import java.text.SimpleDateFormat
import java.time.Instant
import java.util.Date

node {
    setVariables()
    stage ('Download Test Results') {
        withAWS(role:'ToolsSpinnakerManagedRole', roleAccount: "${env.AWS_ACCOUNT_ID}", duration: 900, roleSessionName: 'jenkins-s3-session') {
            s3Download(file:"./", bucket:env.BUCKET_NAME, path:"$outputFolder/", force:true)
        }
    }

    stage('Unzip Test Results'){

        def zipFiles = findFiles(glob:"$outputFolder/*.zip")

        for(zipFile in zipFiles){
            // This unzips all the zip file contents into the current directory.
            // The kubernetes job name is in the trx file names so there shouldn't be any trx overwrites.
            unzip zipFile: zipFile.path, glob: '**/*.trx'
        }
    }

    stage('Parse Test Resulsts'){
        mstest testResultsFile:"**/*.trx", keepLongStdio: true, failOnError: true
    }

    stage('reports') {

        def resultsPath = 'root/Results'

        writeFile file: "$resultsPath/environment.properties", text: "ResultsBucket=$env.BUCKET_NAME\n"

        script {
            allure([
                    includeProperties: false,
                    jdk: '',
                    properties: [],
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: resultsPath]]
            ])
        }
    }
}

def setVariables(){

    outputFolder = env.OUTPUT_FOLDER

}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>